(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{624:function(a,s,t){"use strict";t.r(s);var e=t(14),n=Object(e.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"elastic-stack"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#elastic-stack"}},[a._v("#")]),a._v(" ELastic Stack")]),a._v(" "),t("h2",{attrs:{id:"elastic-stack-架构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#elastic-stack-架构"}},[a._v("#")]),a._v(" Elastic Stack 架构")]),a._v(" "),t("p",[a._v("Elastic Stack 架构如下：\n"),t("img",{attrs:{src:"https://i.loli.net/2020/10/21/oMuFQcb1lpVrvm4.png",alt:"beats-platform.png"}})]),a._v(" "),t("p",[a._v("在整个架构中，每个 Beat 都是支持单独安装的产品，比如 Filebeat 就是一款日志数据采集器，通过在需要采集数据的主机上部署 Beat 组件。Beats 是使用 Go 语言开发的，是"),t("strong",[a._v("轻量级")]),a._v("的组件，对服务器的资源占用几乎可以忽略不计。")]),a._v(" "),t("p",[a._v("Beats 完成数据采集之后，将数据发送给 Logstash，Logstash 中可以定义一些管道，管道从 Beats 或其他地方接收数据，并将处理后的数据发送到 Elasticsearch 或者其他的服务进行处理。在 Logstash 管道中还可以配置一些 Filter 插件来对数据进行过滤筛选。比如 Grok 插件可以对数据进行正则表达式匹配筛选，Mutate 插件可以对数据字段进行变换（重命名、删除、替换和修改等操作）。")]),a._v(" "),t("p",[a._v("Logstash 对数据进行处理完毕后将数据发送至 Elasticsearch，Elasticsearch 会对这些数据进行索引并存储，这些数据在 Elasticsearch 中索引完成之后，用户便可针对他们的数据运行复杂的查询，并使用聚合来检索自身数据的复杂汇总。")]),a._v(" "),t("p",[a._v("在 Kibana 中，用户可以基于自己的数据创建强大的可视化，分享仪表板，并对 Elastic Stack 进行管理。")]),a._v(" "),t("h3",{attrs:{id:"filebeat"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#filebeat"}},[a._v("#")]),a._v(" Filebeat")]),a._v(" "),t("p",[a._v("采集日志文件使用的是 Filebeat，Filebeat 是一款"),t("strong",[a._v("轻量级")]),a._v("的日志数据转发和集中的传送程序。将 Filebeat 安装在服务器上，可以监视用户指定的日志文件或其他文件，收集日志事件，并将其发送至 Elasticsearch 或者 Logstash 进行索引编排。")]),a._v(" "),t("p",[a._v("Filebeat 的工作方式是：启动 Filebeat 后，它将从一个或多个输入，这些输入将在指定的位置进行查找。每个找到的日志都会驱动 Filebeat 启动收集器，每个收集器都会读取日志并获取新内容，然后将日志发送到 libbeat，libbeat 最终会汇总整个事件并将汇总的数据发送到为 Filebeat 配置的输出。")]),a._v(" "),t("h3",{attrs:{id:"logstash"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#logstash"}},[a._v("#")]),a._v(" Logstash")]),a._v(" "),t("blockquote",[t("p",[a._v("Logstash 是免费且开放的服务器端数据处理管道，能够从多个来源采集数据，转换数据，然后将数据发送到您最喜欢的“存储库”中。")])]),a._v(" "),t("h3",{attrs:{id:"elasticsearch"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#elasticsearch"}},[a._v("#")]),a._v(" Elasticsearch")]),a._v(" "),t("blockquote",[t("p",[a._v("Elasticsearch 是一个分布式的开源搜索和分析引擎，适用于所有类型的数据，包括文本、数字、地理空间、结构化和非结构化数据。Elasticsearch 在 Apache Lucene 的基础上开发而成，由 Elasticsearch N.V.（即现在的 Elastic）于 2010 年首次发布。Elasticsearch 以其简单的 REST 风格 API、分布式特性、速度和可扩展性而闻名，是 Elastic Stack 的核心组件；Elastic Stack 是适用于数据采集、充实、存储、分析和可视化的一组开源工具。人们通常将 Elastic Stack 称为 ELK Stack（代指 Elasticsearch、Logstash 和 Kibana），目前 Elastic Stack 包括一系列丰富的轻量型数据采集代理，这些代理统称为 Beats，可用来向 Elasticsearch 发送数据。")])]),a._v(" "),t("h3",{attrs:{id:"kibana"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#kibana"}},[a._v("#")]),a._v(" Kibana")]),a._v(" "),t("blockquote",[t("p",[a._v("Kibana 是一个免费且开放的用户界面，能够让您对 Elasticsearch 数据进行可视化，并让您在 Elastic Stack 中进行导航。您可以进行各种操作，从跟踪查询负载，到理解请求如何流经您的整个应用，都能轻松完成。")])]),a._v(" "),t("h3",{attrs:{id:"beats"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#beats"}},[a._v("#")]),a._v(" Beats")]),a._v(" "),t("blockquote",[t("p",[a._v("Beats 是一个轻量级（资源高效，无依赖性，小型）的开放源代码日志发送程序的集合。这些日志发送程序充当安装在基础结构中不同服务器上的代理，用于收集日志或指标（metrics）。这些可以是日志文件（Filebeat），网络数据（Packetbeat），服务器指标（Metricbeat）或 Elastic 和社区开发的越来越多的 Beats 可以收集的任何其他类型的数据。 收集后，数据将直接发送到 Elasticsearch 或 Logstash 中进行其他处理。Beats 建立在名为 libbeat 的 Go 框架之上，该框架用于数据转发，社区一直在开发和贡献新的 Beats。")])]),a._v(" "),t("p",[a._v("Beats 是一个全品类采集器的系列，包含多个：")]),a._v(" "),t("ul",[t("li",[a._v("Filebeat ：轻量型日志采集器。")]),a._v(" "),t("li",[a._v("Metricbeat ：轻量型指标采集器。")]),a._v(" "),t("li",[a._v("Packetbeat ：轻量型网络数据采集器。")]),a._v(" "),t("li",[a._v("Winlogbeat ：轻量型 Windows 事件日志采集器。")]),a._v(" "),t("li",[a._v("Auditbeat ：轻量型审计日志采集器。")]),a._v(" "),t("li",[a._v("Heartbeat ：面向运行状态监测的轻量型采集器。")]),a._v(" "),t("li",[a._v("Functionbeat ：面向云端数据的无服务器采集器。")])]),a._v(" "),t("h2",{attrs:{id:"安装环境"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装环境"}},[a._v("#")]),a._v(" 安装环境")]),a._v(" "),t("ol",[t("li",[a._v("运行 Elastic Stack 的 Linux 环境为 CentOS 7.6.1810 发行版")]),a._v(" "),t("li",[a._v("JDK 版本为 JDK 1.8.0_u202")]),a._v(" "),t("li",[a._v("MySQL 版本为 5.7.31")]),a._v(" "),t("li",[a._v("安装的 Elastic Stack 版本为 6.8.12\nElastic 官方下载地址为："),t("a",{attrs:{href:"https://www.elastic.co/cn/downloads/past-releases",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://www.elastic.co/cn/downloads/past-releases"),t("OutboundLink")],1),a._v("。")])]),a._v(" "),t("h2",{attrs:{id:"安装-elasticsearch"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装-elasticsearch"}},[a._v("#")]),a._v(" 安装 Elasticsearch")]),a._v(" "),t("h3",{attrs:{id:"下载安装-elasticsearch"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#下载安装-elasticsearch"}},[a._v("#")]),a._v(" 下载安装 Elasticsearch")]),a._v(" "),t("p",[a._v("安装 Elasticsearch 依次：")]),a._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("wget")]),a._v(" https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-6.8.12.rpm\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rpm")]),a._v(" -ivh elasticsearch-6.8.12.rpm\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" elasticsearch-6.8.12.rpm\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br")])]),t("p",[a._v("即可完成对 Elasticsearch 的安装。\n安装完成提示如下：")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("### NOT starting on installation, please execute the following statements to configure elasticsearch service to start automatically using systemd\n sudo systemctl daemon-reload\n sudo systemctl enable elasticsearch.service\n### You can start elasticsearch service by executing\n sudo systemctl start elasticsearch.service\nCreated elasticsearch keystore in /etc/elasticsearch\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br")])]),t("h3",{attrs:{id:"elasticsearch-的配置文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#elasticsearch-的配置文件"}},[a._v("#")]),a._v(" Elasticsearch 的配置文件")]),a._v(" "),t("p",[a._v("Elasticsearch 有三个配置文件：")]),a._v(" "),t("ol",[t("li",[t("p",[t("code",[a._v("elasticsearch.yml")]),a._v("：用于配置 Elasticsearch。")])]),a._v(" "),t("li",[t("p",[t("code",[a._v("jvm.options")]),a._v("：用于配置 Elasticsearch 的 JVM 设置。\n这个配置文件是用来配置运行 Elasticsearch 的  JVM 的设置的。其中：")]),a._v(" "),t("ul",[t("li",[a._v("以 "),t("code",[a._v("#")]),a._v(" 开头的行是注释，不生效。")]),a._v(" "),t("li",[a._v("以 "),t("code",[a._v("-")]),a._v(" 开头的是应用与运行 Elasticsearch 的 JVM 的配置。")]),a._v(" "),t("li",[a._v("以 "),t("code",[a._v("8:")]),a._v(" 等数字开头的是只有在 JVM 版本与该数字版本一致时才生效的配置。")]),a._v(" "),t("li",[a._v("以 "),t("code",[a._v("8-")]),a._v(" 等数字开头的是只有在 JVM 版本大于该数字的时候才生效的配置。")]),a._v(" "),t("li",[a._v("以 "),t("code",[a._v("8-9")]),a._v(" 等数字开头的是只有 JVM 版本在这两个数字之间时才生效的配置。")]),a._v(" "),t("li",[a._v("其他的配置都是不合法的。\n此外还可以自己将其他的 JVM 配置文件导入 "),t("code",[a._v("ES_JAVA_OPTS")]),a._v(" 使用。")])])]),a._v(" "),t("li",[t("p",[t("code",[a._v("log4j2.properties")]),a._v("：用于配置 Elasticsearch 的日志记录。\n这个配置文件是用来配置 Log4j2 的，Elasticsearch 使用的是 Log4j2 进行日志记录。\n关于这个文件的详细内容解析在："),t("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/reference/6.8/logging.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://www.elastic.co/guide/en/elasticsearch/reference/6.8/logging.html"),t("OutboundLink")],1),a._v("。")])])]),a._v(" "),t("p",[a._v("这三个配置文件都在 "),t("code",[a._v("/etc/elasticsearch/")]),a._v(" 文件夹中。")]),a._v(" "),t("h3",{attrs:{id:"一些重要的-elasticsearch-设置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一些重要的-elasticsearch-设置"}},[a._v("#")]),a._v(" 一些重要的 Elasticsearch 设置")]),a._v(" "),t("p",[a._v("Elasticsearch 已经自动完成了很多的配置，但是在正式的生产环境下，需要还是需要考虑一些设置的。")]),a._v(" "),t("ol",[t("li",[t("p",[t("code",[a._v("path.data")]),a._v(" 和 "),t("code",[a._v("path.logs")]),a._v("\n使用 "),t("code",[a._v("rpm")]),a._v(" 安装时，已经自动的将这两项配置完成了。具体可以在 "),t("code",[a._v("elasticsearch.yml")]),a._v(" 配置文件中查看。")])]),a._v(" "),t("li",[t("p",[t("code",[a._v("cluster.name")]),a._v("\n集群的名字，所有名字相同的节点会自动的组成一个集群，默认值是 "),t("code",[a._v("elasticsearch")]),a._v("。\n这里将节点改成一个有意义的名字，还需要确保不会不同的环境中使用重复的名字，以免节点错误的加入了错误的集群。")])]),a._v(" "),t("li",[t("p",[t("code",[a._v("node.name")]),a._v("\n默认的节点名称是随机生成的 UUID 的前七个字符，但是是持久的，节点重启并不会重新生成。这里应该设置为一个有意义的名字。")])]),a._v(" "),t("li",[t("p",[t("code",[a._v("network.host")]),a._v("\n默认情况下，Elasticsearch 仅绑定到回环地址。为了和其他服务器的节点形成集群，需要将该配置绑定到非回环地址。这个配置支持特殊的值，比如 "),t("code",[a._v("_local_")]),a._v("、"),t("code",[a._v("_site_")]),a._v("、"),t("code",[a._v("_global_")]),a._v(" 以及各种网络的修饰符。\n注意："),t("mark",[a._v("一旦设置这个选项，Elasticsearch 就会假设当前正在从开发模式过渡到生产模式，会将许多系统启动检查升级到异常而导致服务可能无法启动。")]),a._v("所以需要谨慎开启这个选项。")])]),a._v(" "),t("li",[t("p",[a._v("发现设置\nElasticsearch 使用名为 "),t("code",[a._v("Zen Discovery")]),a._v(" 的机制实现节点加入集群和主节点的选举。在投入生产环境之前，需要进行两个重要的设置：")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("discovery.zen.ping.unicast.hosts")]),a._v("\nElasticsearch 会自动的绑定到回环地址，并且自动扫描 9300 和 9305 端口以尝试连接到同一个内网下的其他节点，这点是开箱即用的无需进行任何配置。\n但是需要在非内网的服务器上形成带有节点的集群的时候，需要对这个配置提供集群中其他可能处于活动状态且可联系的其他节点的种子列表。")]),a._v(" "),t("li",[t("code",[a._v("discovery.zen.minimum_master_nodes")]),a._v("\n为了防止数据丢失，可以对这个配置进行设置，使得每个符合候选主节点的节点都知道为形成集群必须可见的节点最小数。如果不进行这个设置，可能会导致集群在遭受网络故障的时候被拆分成多个单独的集群（脑裂），这会导致数据的丢失，为了避免脑裂的发生，应该将这个配置设置为： "),t("span",{staticClass:"katex"},[t("span",{staticClass:"katex-mathml"},[t("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[t("semantics",[t("mrow",[t("mo",{attrs:{stretchy:"false"}},[a._v("(")]),t("mtext",[a._v("候选主节点数量")]),t("mo",[a._v("÷")]),t("mn",[a._v("2")]),t("mo",{attrs:{stretchy:"false"}},[a._v(")")]),t("mo",[a._v("+")]),t("mn",[a._v("1")])],1),t("annotation",{attrs:{encoding:"application/x-tex"}},[a._v("(候选主节点数量 \\div 2) + 1")])],1)],1)],1),t("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[t("span",{staticClass:"base"},[t("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),t("span",{staticClass:"mopen"},[a._v("(")]),t("span",{staticClass:"mord cjk_fallback"},[a._v("候")]),t("span",{staticClass:"mord cjk_fallback"},[a._v("选")]),t("span",{staticClass:"mord cjk_fallback"},[a._v("主")]),t("span",{staticClass:"mord cjk_fallback"},[a._v("节")]),t("span",{staticClass:"mord cjk_fallback"},[a._v("点")]),t("span",{staticClass:"mord cjk_fallback"},[a._v("数")]),t("span",{staticClass:"mord cjk_fallback"},[a._v("量")]),t("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}}),t("span",{staticClass:"mbin"},[a._v("÷")]),t("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}})]),t("span",{staticClass:"base"},[t("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),t("span",{staticClass:"mord"},[a._v("2")]),t("span",{staticClass:"mclose"},[a._v(")")]),t("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}}),t("span",{staticClass:"mbin"},[a._v("+")]),t("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}})]),t("span",{staticClass:"base"},[t("span",{staticClass:"strut",staticStyle:{height:"0.64444em","vertical-align":"0em"}}),t("span",{staticClass:"mord"},[a._v("1")])])])]),a._v("。")])]),a._v(" "),t("p",[a._v("Elasticsearch 的各类节点：")]),a._v(" "),t("blockquote",[t("p",[a._v("ElasticSearch集群中，共有五种结点类型：主结点（Master），候选主结点（Master-eligible），数据结点（Data），吸收结点（Ingest）和部落结点（Tribe）。在一个集群中，主结点只有一个，负责管理集群，执行集群级别的操作，比如创建或删除索引，跟踪集群的组成结点的状态，决定将分片分配的目标结点，对集群来说，一个稳定的主结点十分重要。集群会自动进行健康检测，当主结点出现故障时，集群中的候选主结点进行选举，在选举结束之后，一个候选主结点被选举成为新的主结点，实现集群故障的自动转移。候选主结点具有投票权，其他结点没有投票权。")])])]),a._v(" "),t("li",[t("p",[a._v("堆大小设置\n在默认情况下，Elasticsearch 的 JVM 使用的最小和最大堆内存为 1GB。进入生产环境时，确保堆内存设置够用是是很重要的。\n可以通过调整 "),t("code",[a._v("jvm.options")]),a._v(" 中的 "),t("code",[a._v("Xms")]),a._v(" 和 "),t("code",[a._v("Xmx")]),a._v(" 来设置最小和最大堆大小。一般最大堆内存大小设置不超过服务器总内存的一半，这样可以确保有足够的物理内存来进行其他的操作。另外需要注意的是不能将其设置为 JVM 对象压缩指针的临界值（32GB，否则会切换至 64 bit 的对象引用，导致寻址速度变慢）。")])]),a._v(" "),t("li",[t("p",[a._v("堆转移目录\n默认情况下，Elasticsearch 将 JVM 配置为"),t("strong",[a._v("将内存不足异常中的堆转移存储到默认的数据目录下（/var/lib/elasticsearch）中，"),t("strong",[a._v("如果这个目录不适合接收，应该在 "),t("code",[a._v("jvm.options")]),a._v(" 配置中更改 "),t("code",[a._v("-XX:HeapDumpPath=/var/lib/elasticsearch")]),a._v(" 项。而且在 JVM 执行转移堆时，该目录必须")]),a._v("不存在")]),a._v("，否则会失败。")])]),a._v(" "),t("li",[t("p",[a._v("GC 日志\n默认情况下，Elasticsearch 启用 GC 日志，位置和 Elasticsearch 的日志位置相同。默认每 64 MB 更新一次日志，最大为 2 GB。这个选项可以在 "),t("code",[a._v("jvm.options")]),a._v(" 配置文件中进行更改。")])]),a._v(" "),t("li",[t("p",[a._v("临时文件目录\n默认 Elasticsearch 在系统临时文件目录下（"),t("code",[a._v("/tmp")]),a._v("）创建临时目录。如果 Elasticsearch 服务是以 "),t("code",[a._v("systemd")]),a._v(" 服务启动的，那么会定期清理临时文件目录。如果是 "),t("code",[a._v("tar.gz")]),a._v(" 安装的，需要自己创建临时文件目录，并且将 "),t("code",[a._v("ES_TMPDIR")]),a._v(" 指向目录。")])]),a._v(" "),t("li",[t("p",[a._v("JVM 的 fatal error 日志\nElasticsearch 默认将 fatal error 日志写入默认的日志目录。如果这个路径不适合存储日志，应该更换目录，并将 "),t("code",[a._v("jvm.options")]),a._v(" 中的 "),t("code",[a._v("-XX:ErrorFile=/var/log/elasticsearch/hs_err_pid%p.log")]),a._v(" 更改为指定的路径。")])])]),a._v(" "),t("h3",{attrs:{id:"一些重要的系统设置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一些重要的系统设置"}},[a._v("#")]),a._v(" 一些重要的系统设置")]),a._v(" "),t("p",[a._v("理想情况下，Elasticsearch 应该在服务器上单独运行并且使用所有可用的资源。为此，需要对系统进行一些设置，确保运行 Elasticsearch 的用户比默认的允许更多的资源。")]),a._v(" "),t("ol",[t("li",[t("p",[t("code",[a._v("ulimit")]),a._v(" 设置\nElasticsearch 运行最少需要设置文件句柄数为 65535，如果系统的文件句柄数低于这个值（使用 "),t("code",[a._v("ulimit -n")]),a._v(" 可以查看），需要设置值为 65535 以上（"),t("code",[a._v("root")]),a._v(" 用户使用 "),t("code",[a._v("ulimit -n 65536")]),a._v(" 进行设置）。\n或者使用 "),t("code",[a._v("/etc/security/limits.conf")]),a._v(" 文件对特定用户进行设置，比如将运行 Elasticsearch 的用户 "),t("code",[a._v("elasticsearch")]),a._v(" 的最大文件句柄数设置为 65536，可以在这个文件中添加：")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("elasticsearch - nofile 65536\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])])])]),a._v(" "),t("p",[a._v("这个设置需要在下次该用户打开会话窗口才会生效。")]),a._v(" "),t("ol",{attrs:{start:"2"}},[t("li",[t("p",[a._v("Systemd 设置\n在使用 "),t("code",[a._v("systemd")]),a._v(" 的 Linux 系统上，需要覆盖系统服务配置文件，在 "),t("code",[a._v("/etc/systemd/system/elasticsearch.service.d/")]),a._v(" 下创建一个名为 "),t("code",[a._v("override.conf")]),a._v(" 的文件并写入如下的配置：")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("[Service]\nLimitMEMLOCK=infinity\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br")])]),t("p",[a._v("完成后执行 "),t("code",[a._v("systemctl daemon-reload")])])]),a._v(" "),t("li",[t("p",[a._v("禁用交换空间\nLinux 为了尽可能多的让文件系统使用内存，会频繁的切换出未使用的程序的内存至交换空间。这可能导致 JVM 堆的一部分甚至其可执行页面换出到磁盘上，这样对于 Elasticsearch 节点的性能是不利的，可能会导致 GC 进程缓慢，甚至节点断开连接。所以需要进制使用交换空间。\n一共有三种禁用交换空间的方法：")]),a._v(" "),t("ol",[t("li",[a._v("完全禁用：\n需要修改 "),t("code",[a._v("/etc/fstab")]),a._v(" 文件，并导致其他的运行在服务器上的进程也无法使用交换空间。")]),a._v(" "),t("li",[a._v("尽量减少交换性\n将 "),t("code",[a._v("sysctl")]),a._v(" 的 "),t("code",[a._v("vm.swappiness")]),a._v(" 设置为 1，这样可以减少交换趋势，并且正常情况下不会导致交换，同时整个系统在紧急情况下还是可以使用交换空间。但是也能导致其他的进程使用交换不及时。")]),a._v(" "),t("li",[a._v("内存锁定。\n将 "),t("code",[a._v("elasticsearch.yml")]),a._v(" 配置文件中的 "),t("code",[a._v("bootstrap.memory_lock: true")]),a._v(" 开启，这一行默认处于注释状态。设置后，启动 Elasticsearch 之后，如果请求 "),t("code",[a._v("GET _nodes?filter_path=**.mlockall")]),a._v(" 中 "),t("code",[a._v("mlockall")]),a._v(" 是 "),t("code",[a._v("false")]),a._v("，说明没有成功锁定内存，这有可能是 Elasticsearch 的运行用户无权锁定内存导致的，将 "),t("code",[a._v("limitMEMLOCK")]),a._v(" 设置为 "),t("code",[a._v("infinity")]),a._v(" 即可解决。")])])]),a._v(" "),t("li",[t("p",[a._v("虚拟内存设置\nElasticsearch 默认使用 MMap FS 目录存储索引，默认的情况下操作系统的 MMap 数可能设置的很低，这可能会导致内存不足。如果是 RPM 和 DEB 安装的 Elasticsearch 则会自动设置该项。手动的话执行 "),t("code",[a._v("sysctl -w vm.max_map_count=262144")]),a._v(" 将其设置为 262144，然后执行 "),t("code",[a._v("sysctl -p")]),a._v(" 即可生效。")])]),a._v(" "),t("li",[t("p",[a._v("线程数设置\nElasticsearch 需要最少 4096 个线程来执行不同类型的操作。如果系统设置线程池创建线程的大小低于 4096，那么需要在 "),t("code",[a._v("/etc/security/limits.conf")]),a._v(" 文件中将 "),t("code",[a._v("nproc")]),a._v(" 设置为最少 4096。如果是使用 "),t("code",[a._v("systemd")]),a._v(" 运行服务，那么自动会创建，无需设置。")])]),a._v(" "),t("li",[t("p",[a._v("DNS 缓存设置\nElasticsearch 默认不使用 JVM 的 DNS 缓存设置，会覆盖。JVM 默认无期限的缓存正向主机名解析，然后方向解析的主机名缓存十秒。Elasticsearch 则是正向解析的缓存 60 秒，反向解析的缓存 10 秒。如果需要修改，可以在 "),t("code",[a._v("jvm.options")]),a._v(" 配置文件中修改 "),t("code",[a._v("es.networkaddress.cache.ttl")]),a._v("  和 "),t("code",[a._v("es.networkaddress.cache.negative.ttl")]),a._v(" 的值。")])]),a._v(" "),t("li",[t("p",[a._v("JNA 临时目录挂载设置\nElasticsearch 使用 JNA 来执行一些本地方法。默认情况下，Elasticsearch 会把这些方法提取到临时目录，使用 "),t("code",[a._v("noexec")]),a._v(" 挂载会阻止 JVM 进程将本地方法库映射为可执行文件，而本地方法库需要以可执行文件映射到 JVM 地址。所以使用 "),t("code",[a._v("noexec")]),a._v(" 挂载会导致 Java 抛出 "),t("code",[a._v("java.lang.UnsatisfiedLinkerError")]),a._v(" 异常。所以需要重新瓜子 JNA 的临时文件目录。")])])]),a._v(" "),t("h3",{attrs:{id:"运行-elasticsearch"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#运行-elasticsearch"}},[a._v("#")]),a._v(" 运行 Elasticsearch")]),a._v(" "),t("p",[a._v("使用 "),t("code",[a._v("sudo systemctl start elasticsearch.service")]),a._v(" 即可运行 Elasticsearch 节点。运行成功后，执行 "),t("code",[a._v("curl 127.0.0.1:9200")]),a._v(" 会返回如下的数据：")]),a._v(" "),t("div",{staticClass:"language-json line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-json"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"name"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"GLBqAOi"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"cluster_name"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"elasticsearch"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"cluster_uuid"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Qil5_MChSD-JMGJqEYxO6g"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"version"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"number"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"6.8.12"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"build_flavor"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"default"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"build_type"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"rpm"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"build_hash"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"7a15d2a"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"build_date"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"2020-08-12T07:27:20.804867Z"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"build_snapshot"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("false")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"lucene_version"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"7.7.3"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"minimum_wire_compatibility_version"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"5.6.0"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"minimum_index_compatibility_version"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"5.0.0"')]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"tagline"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"You Know, for Search"')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br"),t("span",{staticClass:"line-number"},[a._v("7")]),t("br"),t("span",{staticClass:"line-number"},[a._v("8")]),t("br"),t("span",{staticClass:"line-number"},[a._v("9")]),t("br"),t("span",{staticClass:"line-number"},[a._v("10")]),t("br"),t("span",{staticClass:"line-number"},[a._v("11")]),t("br"),t("span",{staticClass:"line-number"},[a._v("12")]),t("br"),t("span",{staticClass:"line-number"},[a._v("13")]),t("br"),t("span",{staticClass:"line-number"},[a._v("14")]),t("br"),t("span",{staticClass:"line-number"},[a._v("15")]),t("br"),t("span",{staticClass:"line-number"},[a._v("16")]),t("br"),t("span",{staticClass:"line-number"},[a._v("17")]),t("br")])]),t("p",[a._v("这时说明 Elasticsearch 节点已经成功启动运行了。")]),a._v(" "),t("h2",{attrs:{id:"安装-kibana"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装-kibana"}},[a._v("#")]),a._v(" 安装 Kibana")]),a._v(" "),t("h3",{attrs:{id:"下载安装-kibana"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#下载安装-kibana"}},[a._v("#")]),a._v(" 下载安装 Kibana")]),a._v(" "),t("p",[a._v("安装 Kibana 执行如下命令：")]),a._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("wget")]),a._v(" https://artifacts.elastic.co/downloads/kibana/kibana-6.8.12-x86_64.rpm\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rpm")]),a._v(" -ivh kibana-6.8.12-x86_64.rpm\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" kibana-6.8.12-x86_64.rpm\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br")])]),t("p",[a._v("这样 Kibana 就安装完成了，然后使用 "),t("code",[a._v("systemd")]),a._v(" 开启守护进程：")]),a._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("systemctl daemon-reload\nsystemctl "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("enable")]),a._v(" kibana.service\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br")])]),t("h3",{attrs:{id:"kibana-主要文件路径"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#kibana-主要文件路径"}},[a._v("#")]),a._v(" Kibana 主要文件路径")]),a._v(" "),t("table",[t("thead",[t("tr",[t("th",{staticStyle:{"text-align":"center"}},[a._v("类型")]),a._v(" "),t("th",{staticStyle:{"text-align":"center"}},[a._v("路径")])])]),a._v(" "),t("tbody",[t("tr",[t("td",{staticStyle:{"text-align":"center"}},[t("code",[a._v("home")])]),a._v(" "),t("td",{staticStyle:{"text-align":"center"}},[t("code",[a._v("/usr/share/kibana")])])]),a._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"center"}},[t("code",[a._v("bin")])]),a._v(" "),t("td",{staticStyle:{"text-align":"center"}},[t("code",[a._v("/usr/share/kibana/bin")])])]),a._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"center"}},[t("code",[a._v("config")])]),a._v(" "),t("td",{staticStyle:{"text-align":"center"}},[t("code",[a._v("/etc/kibana")])])]),a._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"center"}},[t("code",[a._v("data")])]),a._v(" "),t("td",{staticStyle:{"text-align":"center"}},[t("code",[a._v("/var/lib/kibana")])])]),a._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"center"}},[t("code",[a._v("optimize")])]),a._v(" "),t("td",{staticStyle:{"text-align":"center"}},[t("code",[a._v("/usr/share/kibana/optimize")])])]),a._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"center"}},[t("code",[a._v("plugins")])]),a._v(" "),t("td",{staticStyle:{"text-align":"center"}},[t("code",[a._v("/usr/share/kibana/plugins")])])])])]),a._v(" "),t("p",[a._v("以上路径均为默认使用 RPM 安装的路径。")]),a._v(" "),t("h3",{attrs:{id:"kibana-配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#kibana-配置"}},[a._v("#")]),a._v(" Kibana 配置")]),a._v(" "),t("p",[a._v("使用 RPM 或 DEB 安装的 Kibana 的配置文件位于 "),t("code",[a._v("/etc/kibana/")]),a._v(" 下。\n默认的 Kibana 配置为在 "),t("code",[a._v("localhost:5601")]),a._v(" 上运行，要更改主机或者端口号，或者是与另一台主机上的 Elasticsearch 连接，需要对 "),t("code",[a._v("kibana.yml")]),a._v(" 中的一些配置进行修改。\nKibana 的可配置选项很多，但是大部分都是配置好的，直接就可以使用，详细的 Kibana 的配置说明在 "),t("a",{attrs:{href:"https://www.elastic.co/guide/en/kibana/6.8/settings.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://www.elastic.co/guide/en/kibana/6.8/settings.html"),t("OutboundLink")],1),a._v(" 处可以查看。\n从 6.7 之后开始的版本，Kibana 支持中文了，将配置文件中的 "),t("code",[a._v("i18n.locale")]),a._v(" 设置从 "),t("code",[a._v('"en"')]),a._v(" 修改为 "),t("code",[a._v('"zh-CN"')]),a._v(" 即可切换 Kibana 为中文，但是部分界面汉化程度并不完全。")]),a._v(" "),t("h3",{attrs:{id:"kibana-安全设置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#kibana-安全设置"}},[a._v("#")]),a._v(" Kibana 安全设置")]),a._v(" "),t("p",[a._v("有些设置比较敏感，仅仅依靠系统权限来保护是不够的。为此，Kibana 提供了一个密钥库，以及 "),t("code",[a._v("kibana-keystore")]),a._v(" 工具来管理密钥库中的设置。\n执行 "),t("code",[a._v("kibana-keystore create")]),a._v(" 来创建一个密钥库。\n执行 "),t("code",[a._v("kibana-keystore create")]),a._v(" 查看密钥库中的设置。\n执行 "),t("code",[a._v("kibana-keystore add the.setting.name.to.set")]),a._v(" 添加一些设置到密钥库。比如添加 Elasticsearch 的用户名到密钥库："),t("code",[a._v("kibana-keystore add the.setting.name.to.set")]),a._v("，然后输入 "),t("code",[a._v("elasticsearch")]),a._v(" 的值即可向密钥库添加。")]),a._v(" "),t("h3",{attrs:{id:"运行-kibana"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#运行-kibana"}},[a._v("#")]),a._v(" 运行 Kibana")]),a._v(" "),t("p",[a._v("使用 RPM 安装的 Kibana 使用 "),t("code",[a._v("systemd")]),a._v(" 服务来启动 Kibana 即可：")]),a._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("systemctl start kibana\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("p",[a._v("成功运行后，访问 "),t("a",{attrs:{href:"http://localhost:5601",target:"_blank",rel:"noopener noreferrer"}},[a._v("http://localhost:5601"),t("OutboundLink")],1),a._v(" 如下图：\n"),t("img",{attrs:{src:"https://i.loli.net/2020/10/21/PKSpqETM3yv19mk.png",alt:"image-20201015194300884.png"}})]),a._v(" "),t("p",[a._v("说明 Kibana 成功运行。")]),a._v(" "),t("h2",{attrs:{id:"安装-logstash"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装-logstash"}},[a._v("#")]),a._v(" 安装 Logstash")]),a._v(" "),t("h3",{attrs:{id:"下载安装-logstash"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#下载安装-logstash"}},[a._v("#")]),a._v(" 下载安装 Logstash")]),a._v(" "),t("p",[a._v("使用 RPM 安装 Logstash，执行如下的命令：")]),a._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("wget")]),a._v(" https://artifacts.elastic.co/downloads/logstash/logstash-6.8.12.rpm\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rpm")]),a._v(" -ivh logstash-6.8.12.rpm\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" logstash-6.8.12.rpm\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br")])]),t("p",[a._v("安装完成后，出现如下的提示：")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("Using provided startup.options file: /etc/logstash/startup.options\n/usr/share/logstash/vendor/bundle/jruby/2.5.0/gems/pleaserun-0.0.31/lib/pleaserun/platform/base.rb:112: warning: constant ::Fixnum is deprecated\nSuccessfully created system startup script for Logstash\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br")])]),t("p",[a._v("这说明已经成功安装。接下来可以使用 "),t("code",[a._v("systemd")]),a._v(" 为 Logstash 开启守护进程了：")]),a._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("systemctl daemon-reload\nsystemctl "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("enable")]),a._v(" logstash.service\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br")])]),t("h3",{attrs:{id:"logstash-配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#logstash-配置"}},[a._v("#")]),a._v(" Logstash 配置")]),a._v(" "),t("p",[a._v("配置 Logstash 需要创建一个配置文件，使用该文件指定每个插件的设置。默认在 "),t("code",[a._v("/etc/logstash/")]),a._v(" 存放 Logstash 的配置文件。其中名为 "),t("code",[a._v("logstash-sample.conf")]),a._v(" 的文件就是一个简单的 Logstash 的配置文件示例。")]),a._v(" "),t("p",[a._v("Logstash 配置文件的大致结构如下：")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("input {\n  ...\n}\n\nfilter {\n  ...\n}\n\noutput {\n  ...\n}\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br"),t("span",{staticClass:"line-number"},[a._v("7")]),t("br"),t("span",{staticClass:"line-number"},[a._v("8")]),t("br"),t("span",{staticClass:"line-number"},[a._v("9")]),t("br"),t("span",{staticClass:"line-number"},[a._v("10")]),t("br"),t("span",{staticClass:"line-number"},[a._v("11")]),t("br")])]),t("p",[a._v("其中有三个部分："),t("code",[a._v("input")]),a._v("、"),t("code",[a._v("filter")]),a._v(" 和 "),t("code",[a._v("output")]),a._v("。每个部分都可以定义一个或多个插件，如果指定了多个过滤器，那么会按照配置文件中的顺序来使用。如下就可以为 Logstash 的输入配置两个文件来源：")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('input {\n  file {\n    path => "/var/log/messages"\n    type => "syslog"\n  }\n\n  file {\n    path => "/var/log/apache/access.log"\n    type => "apache"\n  }\n}\n')])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br"),t("span",{staticClass:"line-number"},[a._v("7")]),t("br"),t("span",{staticClass:"line-number"},[a._v("8")]),t("br"),t("span",{staticClass:"line-number"},[a._v("9")]),t("br"),t("span",{staticClass:"line-number"},[a._v("10")]),t("br"),t("span",{staticClass:"line-number"},[a._v("11")]),t("br")])]),t("p",[a._v("这里为每个配置设置了两种类型："),t("code",[a._v("path")]),a._v(" 和 "),t("code",[a._v("type")]),a._v("。根据插件的不同，可以选择配置类型也不相同，主要有 "),t("code",[a._v("boolean")]),a._v("、"),t("code",[a._v("list")]),a._v("、"),t("code",[a._v("hash")]),a._v(" 等类型，具体的信息可以在 "),t("a",{attrs:{href:"https://www.elastic.co/guide/en/logstash/6.8/configuration-file-structure.html#plugin-value-types",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://www.elastic.co/guide/en/logstash/6.8/configuration-file-structure.html#plugin-value-types"),t("OutboundLink")],1),a._v(" 处查看。")]),a._v(" "),t("p",[a._v("在 Logstash 中，还可以配置多条管道的输出，并为每个管道指定自己的配置文件。语法如下：")]),a._v(" "),t("div",{staticClass:"language-yaml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("pipeline.id")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" my"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("pipeline_1\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("path.config")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"/etc/path/to/p1.config"')]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("pipeline.workers")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("pipeline.id")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" my"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("other"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("pipeline\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("path.config")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"/etc/different/path/p2.cfg"')]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("queue.type")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" persisted\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br")])]),t("p",[t("mark",[a._v("配置完成后，需要将配置文件保存到 "),t("code",[a._v("conf.d")]),a._v(" 路径下，否则配置不会被读取到，启动会失败。")])]),a._v(" "),t("h3",{attrs:{id:"运行-logstash"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#运行-logstash"}},[a._v("#")]),a._v(" 运行 Logstash")]),a._v(" "),t("p",[a._v("使用 "),t("code",[a._v("systemd")]),a._v(" 运行 Logstash，只需要执行：")]),a._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("systemctl start logstash.service\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("p",[a._v("即可运行 Logstash。")]),a._v(" "),t("h2",{attrs:{id:"安装-filebeat"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装-filebeat"}},[a._v("#")]),a._v(" 安装 Filebeat")]),a._v(" "),t("h3",{attrs:{id:"下载安装-filebeat"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#下载安装-filebeat"}},[a._v("#")]),a._v(" 下载安装 Filebeat")]),a._v(" "),t("p",[a._v("执行：")]),a._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("wget")]),a._v(" https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-6.8.12-x86_64.rpm\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rpm")]),a._v(" -ivh https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-6.8.12-x86_64.rpm\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" filebeat-6.8.12-x86_64.rpm\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br")])]),t("p",[a._v("即可完成安装 Filebeat\n然后可以使用 "),t("code",[a._v("systemd")]),a._v(" 开启 Filebeat 的守护进程。")]),a._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("systemctl daemon-reload\nsystemctl "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("enable")]),a._v(" filebeat.service\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br")])]),t("h3",{attrs:{id:"filebeat-配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#filebeat-配置"}},[a._v("#")]),a._v(" Filebeat 配置")]),a._v(" "),t("p",[a._v("Filebeat 的默认配置文件在 "),t("code",[a._v("/etc/filebeat/")]),a._v(" 路径下。默认的配置文件是 "),t("code",[a._v("filebeat.yml")]),a._v("，此外还有一个名为 "),t("code",[a._v("filebeat.reference.yml")]),a._v(" 的完整配置示例文件，其中显示了所有的可配置项，包括不推荐的配置。可以从这个配置文件中将需要的配置复制粘贴到 "),t("code",[a._v("filebeat.yml")]),a._v(" 中使用，这个文件的全部内容在 "),t("a",{attrs:{href:"https://www.elastic.co/guide/en/beats/filebeat/6.8/filebeat-reference-yml.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://www.elastic.co/guide/en/beats/filebeat/6.8/filebeat-reference-yml.html"),t("OutboundLink")],1),a._v(" 处可见。\nFilebeat 允许将配置文件拆分成多个小的模块，然后从 "),t("code",[a._v("filebeat.yml")]),a._v(" 文件中加载外部的这些小的配置文件模块。加载配置如下：")]),a._v(" "),t("div",{staticClass:"language-yaml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("filebeat.config.inputs")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("enabled")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token boolean important"}},[a._v("true")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("path")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" configs/"),t("span",{pre:!0,attrs:{class:"token important"}},[a._v("*.yml")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br")])]),t("ol",[t("li",[t("p",[a._v("输入源设置\n可以在 "),t("code",[a._v("filebeat.inputs")]),a._v(" 中配置 Filebeat 的输入来源，但是注意要将 "),t("code",[a._v("enabled")]),a._v(" 选项开启，否则不会启用，这一选项默认是关闭的。这段配置默认如下：")]),a._v(" "),t("div",{staticClass:"language-yaml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("filebeat.inputs")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("type")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" log\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("enabled")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token boolean important"}},[a._v("false")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("paths")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" /var/log/"),t("span",{pre:!0,attrs:{class:"token important"}},[a._v("*.log")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br")])]),t("p",[a._v("这段示例使用 Filebeat 采集在 "),t("code",[a._v("/var/log/")]),a._v(" 下的所有格式为 "),t("code",[a._v(".log")]),a._v(" 的文件。这里支持 Go 语言 Glob 的语法进行书写。")])]),a._v(" "),t("li",[t("p",[a._v("输出设置\nFilebeat 支持多种输出，一般情况下在 Elastic Stack 中只需要将其配置到 Elasticsearch 或者 Logstash 中进行其他处理即可。比如将 Filebeat 采集的数据发送到 Logstash，配置如下：")]),a._v(" "),t("div",{staticClass:"language-yaml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("output.logstash")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("hosts")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"localhost:5044"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br")])]),t("p",[a._v("即可将其输出到 Logstash 中进行进一步处理。\n需要注意的是："),t("mark",[a._v("默认情况下配置是输出到 Elasticsearch 的，如果修改输出到 Logstash，那么需要将 Elasticsearch 输出的配置删除。")]),a._v("\n如果需要对 Logstash（或 Elasticsearch） 和 Kibana 等进行安全性设置，需要在这里添加认证凭证（用户名密码等，可以进一步将其配置到 X-Pack）。")])]),a._v(" "),t("li",[t("p",[a._v("加载模板\nFilebeat 在使用 Elasticsearch 作为输出的时候，是可以自动加载模板的，但是使用 Logstash 作为输出的时候，需要手动加载模板。手动加载模板使用 "),t("code",[a._v("setup")]),a._v(" 命令，需要与 Elasticsearch 进行连接，且暂时禁用配置的输出（这里是 Logstash），执行如下的指令")]),a._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("filebeat setup --template -E output.logstash.enabled"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("false -E "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'output.elasticsearch.hosts=[\"localhost:9200\"]'")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("p",[a._v("如果 Filebeat 和 Elasticsearch 所在的主机没有直接的连接，需要使用如下的指令进行加载模板的设置：")]),a._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("filebeat "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" template "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" filebeat.template.json\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("curl")]),a._v(" -XPUT -H "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'Content-Type: application/json'")]),a._v(" http://localhost:9200/_template/filebeat-6.8.12 -d@filebeat.template.json\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br")])]),t("p",[a._v("上面的指令先导出了模板设置，然后使用 "),t("code",[a._v("curl -XPUT")]),a._v(" 设置了模板配置。")]),a._v(" "),t("p",[a._v("直接将数据输出到 Logstash，然后使用 Logstash 处理数据再输出到 Elasticsearch 中，这一步可以不需要。")])]),a._v(" "),t("li",[t("p",[a._v("Kibana 仪表盘\n将配置文件中的 "),t("code",[a._v("setup.dashboards.enabled: true")]),a._v(" 选项开启即可，会在默认的 Elastics 网站下载 Dashboard 需要的文件。")])])]),a._v(" "),t("h3",{attrs:{id:"filebeat-模块"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#filebeat-模块"}},[a._v("#")]),a._v(" Filebeat 模块")]),a._v(" "),t("p",[a._v("Filebeat 内置了很多模块，但是默认都是没有启用的。可以通过 "),t("code",[a._v("filebeat modules list")]),a._v(" 命令来查看 Filebeat 支持的模块。\n启用和禁用模块则是通过 "),t("code",[a._v("filebeat modules enable xxx")]),a._v(" 和 "),t("code",[a._v("filebeat modules disable xxx")]),a._v(" 执行。\n模块启用后，在 "),t("code",[a._v("modules.d")]),a._v(" 路径下可以对启用的模块进行配置，每个模块的配置文件都在这个路径下。")]),a._v(" "),t("h3",{attrs:{id:"mysql-模块"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mysql-模块"}},[a._v("#")]),a._v(" MySQL 模块")]),a._v(" "),t("p",[a._v("MySQL 模块是用于收集和分析 MySQL 的日志的。\n运行 MySQL 模块的时候，默认会设置日志文件的路径，确保多个日志作为单个事件发送，使用 ingest 节点（吸收节点）来解析和处理日志，将数据塑造成适合在 Kibana 中进行可视化展示的结构，最后会部署用于可视化日志数据的仪表盘。")]),a._v(" "),t("p",[a._v("要使用 MySQL 模块，首先需要开启 MySQL 模块，使用指令："),t("code",[a._v("filebeat modules enable mysql")]),a._v(" 开启 MySQL 模块后，进入 "),t("code",[a._v("modules.d")]),a._v(" 路径，会看到除了 "),t("code",[a._v("mysql.yml")]),a._v(" 之外的配置文件都是有一个 "),t("code",[a._v(".disable")]),a._v(" 后缀的，这说明这些模块没有被开启。\n开启 MySQL 模块后就可以对 "),t("code",[a._v("mysql.yml")]),a._v(" 配置文件进行编辑了，里面默认只有错误日志和慢查询日志的收集选项。这里对其路径进行配置即可，但是需要将 "),t("code",[a._v("enabled")]),a._v(" 设置为 "),t("code",[a._v("true")]),a._v("，不然配置并不会加载。")]),a._v(" "),t("p",[a._v("注意："),t("mark",[a._v("这里的配置文件的格式的路径是 "),t("code",[a._v('["path.to.logs"]')]),a._v("，如果不是这个格式 Filebeat 将启动失败。")])]),a._v(" "),t("h3",{attrs:{id:"加载管道"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#加载管道"}},[a._v("#")]),a._v(" 加载管道")]),a._v(" "),t("p",[a._v("默认情况下，Filebeat 推荐使用 Elasticsearch 作为输出，这样用于分析日志的管道就会自动的进行加载，但是如果使用的是 Logstash 等作为输出，那么就需要手动加载管道，这样才能将事件发送到 Logstash，那么就需要执行以下的命令来加载管道：")]),a._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("filebeat setup --pipelines --modules mysql,xxx,xxx\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("p",[a._v("这里是可以跟上多个模块的，中间用 "),t("code",[a._v(",")]),a._v(" 进行分隔。\n实际上好像发现这一步并不需要，直接就可以默认的根据配置文件进行加载并没有出现任何问题。")]),a._v(" "),t("h3",{attrs:{id:"运行-filebeat"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#运行-filebeat"}},[a._v("#")]),a._v(" 运行 Filebeat")]),a._v(" "),t("p",[a._v("使用 RPM 安装的 Filebeat 可以直接使用 "),t("code",[a._v("systemd")]),a._v(" 来启动：")]),a._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("systemctl start filebeat.service\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("p",[a._v("即可启动 Filebeat 服务。\n运行 Filebeat 后，虽然是成功运行的，但是会存在一条警告，提示没有数据的输出设置不是设置为 Elasticsearch 的，如果已设置为 Logstash 请忽略，这是因为 FIlebeat 默认的推荐将数据输出到 Elasticsearch 中，但是这里更改成了 Logstash，所以才出现了这一句提示，这并不影响整个系统的架构的运行，忽略即可。")]),a._v(" "),t("h2",{attrs:{id:"winlogbeat"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#winlogbeat"}},[a._v("#")]),a._v(" WinlogBeat")]),a._v(" "),t("p",[a._v("Winlogbeat 可以将 Windows 事件日志发送到 Elasticsearch 或 Logstash 的 Beat 组件。Windows 可以从系统上捕获运行的任何事件产生的日志中捕获相应的数据。")]),a._v(" "),t("h3",{attrs:{id:"下载安装-winlogbeat"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#下载安装-winlogbeat"}},[a._v("#")]),a._v(" 下载安装 Winlogbeat")]),a._v(" "),t("p",[a._v("Winlogbeat 仅适用于 Windows 平台，下载地址是 "),t("a",{attrs:{href:"https://artifacts.elastic.co/downloads/beats/winlogbeat/winlogbeat-6.8.12-windows-x86_64.zip",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://artifacts.elastic.co/downloads/beats/winlogbeat/winlogbeat-6.8.12-windows-x86_64.zip"),t("OutboundLink")],1),a._v("。\n下载后，对压缩包进行解压，然后运行 "),t("code",[a._v("install-service-winlogbeat.ps1")]),a._v(" 即可安装 Winlogbeat。")]),a._v(" "),t("h3",{attrs:{id:"winlogbeat-配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#winlogbeat-配置"}},[a._v("#")]),a._v(" Winlogbeat 配置")]),a._v(" "),t("p",[a._v("Winlogbeat 的配置文件是 "),t("code",[a._v("winlogbeat.yml")]),a._v("。")]),a._v(" "),t("ol",[t("li",[a._v("记录事件\n可以配置 Winlogbeat 记录什么类型的事件，配置如下："),t("div",{staticClass:"language-yaml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("winlogbeat.event_logs")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" Application\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("ignore_older")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" 72h\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" Security\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" System\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br")])])]),a._v(" "),t("li",[a._v("输出设置\n和 Filebeat 一样，可以选择输出目标，默认是 Elasticsearch，为了加强扩展能力，还是选择更改为 Logstash。如下："),t("div",{staticClass:"language-yaml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("output.logstash")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("hosts")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"localhost:5044"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br")])])]),a._v(" "),t("li",[a._v("Kibana 设置\n如果使用的是默认的 Kibana，且和 Winlogbeat 在一个主机上部署的，那么直接使用默认的设置即可，不然需要更改配置，如下："),t("div",{staticClass:"language-yaml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("setup.kibana")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("host")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"localhost:5601"')]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br")])])]),a._v(" "),t("li",[a._v("Dashboard 设置\n和 Filebeat 一样，可以设置 Winlogbeat 在 Kibana 是否开启 Dashboard，并设置 Dashboard 下载路径（这里路径使用默认的即可）："),t("div",{staticClass:"language-yaml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("setup.dashboards.enabled")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token boolean important"}},[a._v("true")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])])])]),a._v(" "),t("h3",{attrs:{id:"运行-winlogbeat"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#运行-winlogbeat"}},[a._v("#")]),a._v(" 运行 Winlogbeat")]),a._v(" "),t("p",[a._v("在 Winlogbeat 的安装目录内，运行：")]),a._v(" "),t("div",{staticClass:"language-powershell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-powershell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("Start-Service")]),a._v(" winlogbeat\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("p",[a._v("即可启动 Winlogbeat 服务。")]),a._v(" "),t("h2",{attrs:{id:"mysql-数据库日志收集"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mysql-数据库日志收集"}},[a._v("#")]),a._v(" MySQL 数据库日志收集")]),a._v(" "),t("p",[a._v("Filebeat 内置的 MySQL 模块插件默认只收集 MySQL 的慢查询日志和错误日志。如果需要收集其他的类型的 MySQL 日志，需要在 Filebeat 中配置读取的日志路径以及日志文件名。")]),a._v(" "),t("h3",{attrs:{id:"开启-mysql-慢查询日志"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#开启-mysql-慢查询日志"}},[a._v("#")]),a._v(" 开启 MySQL 慢查询日志")]),a._v(" "),t("p",[a._v("默认情况下，MySQL 的慢查询日志是不开启的，通过使用 MySQL 执行：")]),a._v(" "),t("div",{staticClass:"language-mysql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("show variables  like '%slow_query_log%';\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("p",[a._v("可以看到，慢查询日志是没有开启的。并且可以获得慢查询日志的存储路径。\n开启慢查询日志执行：")]),a._v(" "),t("div",{staticClass:"language-mysql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("set global slow_query_log=1;\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("p",[a._v("即可开启。\n但是这样开启之后，在 MySQL 重启后会失效，并不是永久的。如果要永久生效，是需要在 "),t("code",[a._v("my.cnf")]),a._v(" 文件中写入：")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("slow_query_log =1\nslow_query_log_file=path.to.slow.log\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br")])]),t("p",[a._v("保存后重启 MySQL 即可。\n默认的 MySQL 慢查询时间是 10 秒，可以使用 "),t("code",[a._v("show variables like 'long_query_time';")]),a._v(" 查看，这里可以使用 "),t("code",[a._v("set global long_query_time=x;")]),a._v(" 来更改慢查询时间。比如改成 2。\n然后可以使用 "),t("code",[a._v("SELECT sleep(x);")]),a._v(" 来产生几条慢查询日志。")]),a._v(" "),t("h3",{attrs:{id:"启用并配置-mysql-模块"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#启用并配置-mysql-模块"}},[a._v("#")]),a._v(" 启用并配置 MySQL 模块")]),a._v(" "),t("p",[a._v("默认情况下，Filebeat 的 MySQL 模块是没有启用的，首先需要启用 MySQL 模块，使用指令 "),t("code",[a._v("filebeat modules enable mysql")]),a._v(" 即可。\n启用完成后，在 "),t("code",[a._v("modules.d")]),a._v(" 路径下对 "),t("code",[a._v("mysql.yml")]),a._v(" 配置文件进行配置。主要就是指定慢查询日志和错误日志的开启与否以及日志路径，这个可以在 MySQL 中查询到。配置文件大致如下：")]),a._v(" "),t("div",{staticClass:"language-yaml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("module")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" mysql\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("error")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("enabled")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token boolean important"}},[a._v("true")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("var.paths")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"/var/log/mysqld.log"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("slowlog")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("enabled")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token boolean important"}},[a._v("true")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("var.paths")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"/var/lib/mysql/elk_fb-slow.log"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br"),t("span",{staticClass:"line-number"},[a._v("7")]),t("br"),t("span",{staticClass:"line-number"},[a._v("8")]),t("br")])]),t("p",[a._v("需要注意的是：路径是作为集合来书写的，所以需要 "),t("code",[a._v("[]")]),a._v(" 包裹，否则会导致 Filebeat 启动失败。")]),a._v(" "),t("h3",{attrs:{id:"启动集群并访问-kibana"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#启动集群并访问-kibana"}},[a._v("#")]),a._v(" 启动集群并访问 Kibana")]),a._v(" "),t("p",[a._v("配置完成后，如下顺序依次启动集群：")]),a._v(" "),t("mermaid",[a._v("graph LR\nA(Elasticsearch) --\x3e B(Kibana)\nB --\x3e C(Logstash)\nC --\x3e D(Filebeat)\n")]),t("p",[a._v("集群启动后，可以访问 "),t("a",{attrs:{href:"http://localhost:5601",target:"_blank",rel:"noopener noreferrer"}},[a._v("http://localhost:5601"),t("OutboundLink")],1),a._v(" 来访问 Kibana 提供的 WebUI 界面。\n访问界面后点击侧边的***管理***选项，然后为 Filebeat 采集器创建一个索引模式。创建完成后，可以开启侧边的***监控***功能，查看整个集群的健康情况，如下：\n"),t("img",{attrs:{src:"https://i.loli.net/2020/10/21/kM5dHi9OZ2QXmJ7.png",alt:"image-20201021090627786.png"}})]),a._v(" "),t("p",[a._v("可以点击去查看每个节点和索引的运行情况：\n"),t("img",{attrs:{src:"https://i.loli.net/2020/10/21/WmCTiAg4q6a1px3.png",alt:"image-20201021090714461.png"}})]),a._v(" "),t("p",[a._v("点击侧边的***日志***选项，可以查看到所有的收集到的日志：\n"),t("img",{attrs:{src:"https://i.loli.net/2020/10/21/zXfxqpU3tERwdjs.png",alt:"image-20201021090812172.png"}}),a._v("\n可以在上方的搜索栏针对日志进行搜索或者在时间针对日志进行筛选。")]),a._v(" "),t("p",[a._v("侧边的***仪表盘***还可以图形化展示日志的情况，如下：\n"),t("img",{attrs:{src:"https://i.loli.net/2020/10/21/SPHaN5etmWpskZE.png",alt:"image-20201021091035280.png"}}),a._v("\n部分区域没有显示是因为没有搜集到该种类的日志。\n在日志的图中，可以通过点击某个柱形来不断细分日志，还可以添加筛选条件来对日志进行筛选。")]),a._v(" "),t("p",[a._v("在***可视化***界面可以根据需要查看的日志类型来生成图表，比如这里我查看所有的 MySQL 数据库的错误日志，可以生成如下的图表：\n"),t("img",{attrs:{src:"https://i.loli.net/2020/10/21/4JVZXS8Q7Ll6FIq.png",alt:"image-20201021091333913.png"}}),a._v("\n同样的，这里可以点击柱形对日志详细情况细分，缩小时间段来查看更加详细的日志。")]),a._v(" "),t("p",[t("em",[t("strong",[a._v("Discovery")])]),a._v(" 界面提供了日志的详细分类，如下：\n"),t("img",{attrs:{src:"https://i.loli.net/2020/10/21/L2SYdjUFgltVqAE.png",alt:"image-20201021091527353.png"}}),a._v("\n可以在此对日志进行筛选，查询等操作。")]),a._v(" "),t("h2",{attrs:{id:"参考资料"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[a._v("#")]),a._v(" 参考资料")]),a._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://www.elastic.co/guide/en/elastic-stack/6.8/index.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("Elastic Stack 官方文档"),t("OutboundLink")],1)]),a._v(" "),t("li",[t("a",{attrs:{href:"https://doc.yonyoucloud.com/doc/logstash-best-practice-cn/index.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("Logstash 最佳实践"),t("OutboundLink")],1)]),a._v(" "),t("li",[t("a",{attrs:{href:"https://www.aliyun.com/product/bigdata/product/elasticsearch",target:"_blank",rel:"noopener noreferrer"}},[a._v("阿里云 · Elasticsearch"),t("OutboundLink")],1)]),a._v(" "),t("li",[t("a",{attrs:{href:"https://www.yfshare.vip/2017/11/18/Logstash%E6%8F%92%E4%BB%B6/",target:"_blank",rel:"noopener noreferrer"}},[a._v("Logstash插件"),t("OutboundLink")],1)]),a._v(" "),t("li",[t("a",{attrs:{href:"https://segmentfault.com/a/1190000018151612",target:"_blank",rel:"noopener noreferrer"}},[a._v("logstash常用插件介绍"),t("OutboundLink")],1)]),a._v(" "),t("li",[t("a",{attrs:{href:"https://developer.aliyun.com/article/762984",target:"_blank",rel:"noopener noreferrer"}},[a._v("【最佳实践】Filebeat实现MySQL日志轻量化发送至Elasticsearch"),t("OutboundLink")],1)]),a._v(" "),t("li",[t("a",{attrs:{href:"http://www.iocoder.cn/Elasticsearch/ELK-install/?vip",target:"_blank",rel:"noopener noreferrer"}},[a._v("芋道 ELK(Elasticsearch + Logstash + Kibana) 极简入门"),t("OutboundLink")],1)]),a._v(" "),t("li",[t("a",{attrs:{href:"http://www.iocoder.cn/Elasticsearch/install/?self",target:"_blank",rel:"noopener noreferrer"}},[a._v("芋道 Elasticsearch 极简入门"),t("OutboundLink")],1)])])],1)}),[],!1,null,null,null);s.default=n.exports}}]);